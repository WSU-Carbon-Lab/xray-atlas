generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Experiment {
  id          String      @id(map: "PK_Experiment") @db.UniqueIdentifier
  molecule    String      @db.UniqueIdentifier
  prep        String      @db.UniqueIdentifier
  source      String      @db.NVarChar(255)
  endstation  String      @db.NVarChar(255)
  atom        String      @db.NVarChar(255)
  edge        String      @db.NVarChar(255)
  method      String      @db.VarChar(10)
  Molecule    Molecule    @relation(fields: [molecule], references: [id], onUpdate: NoAction, map: "fk_molecul")
  Preparation Preparation @relation(fields: [prep], references: [id], onUpdate: NoAction, map: "fk_prep")
  Nexafs      Nexafs[]

  @@index([endstation], map: "idx_experiment_endstation")
  @@index([molecule], map: "idx_experiment_molecule")
  @@index([prep], map: "idx_experiment_prep")
  @@index([source], map: "idx_experiment_source")
}

model Preparation {
  id         String       @id(map: "PK_Preparation") @db.UniqueIdentifier
  method     String       @db.NVarChar(Max)
  spin_id    String?      @db.UniqueIdentifier
  pvd_id     String?      @db.UniqueIdentifier
  molecule   String?      @db.UniqueIdentifier
  Experiment Experiment[]
  Molecule   Molecule?    @relation(fields: [molecule], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Preparation_Molecule")
  PVD        PVD?         @relation(fields: [pvd_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Preparation_PVD")
  SpinCoat   SpinCoat?    @relation(fields: [spin_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Preparation_SpinCoat")

  @@index([molecule], map: "IDX_Preparation_Molecule")
  @@index([pvd_id], map: "IDX_Preparation_PVD")
  @@index([spin_id], map: "IDX_Preparation_SpinCoat")
}

model Molecule {
  id          String        @id(map: "PK_Molecule") @db.UniqueIdentifier
  name        String        @unique(map: "UC_name") @db.NVarChar(50)
  formula     String        @db.NVarChar(Max)
  image       String        @db.NVarChar(Max)
  class       String        @db.NVarChar(Max)
  vendor      String        @db.NVarChar(Max)
  cid         String?       @db.NVarChar(Max)
  cas         String?       @db.NVarChar(Max)
  Experiment  Experiment[]
  Preparation Preparation[]
  PVD         PVD[]
}

model Nexafs {
  id         Int        @id(map: "PK__Nexafs__3213E83F81736F62") @default(autoincrement())
  exp_id     String     @db.UniqueIdentifier
  e          Decimal    @db.Decimal(10, 5)
  mu         Decimal    @db.Decimal(12, 10)
  deg        Decimal?   @db.Decimal(5, 3)
  Experiment Experiment @relation(fields: [exp_id], references: [id], onUpdate: NoAction, map: "FK_Nexafs_Experiment")
}

model PVD {
  id          String        @id(map: "PK_PVD") @db.UniqueIdentifier
  substrate   String?       @db.UniqueIdentifier
  rate        Decimal?      @db.Decimal(18, 0)
  temp        Decimal?      @db.Decimal(18, 0)
  pressure    Decimal?      @db.Decimal(18, 0)
  thickness   Decimal?      @db.Decimal(18, 0)
  Preparation Preparation[]
  Molecule    Molecule?     @relation(fields: [substrate], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PVD_Molecule")

  @@unique([id, substrate, rate, temp, pressure, thickness], map: "UQ_Process_pvd")
  @@index([substrate], map: "IDX_PVD_Substrate")
}

model SpinCoat {
  id            String        @id(map: "PK_SpinCoat") @db.UniqueIdentifier
  solvent       String        @db.UniqueIdentifier
  concentration Decimal?      @db.Decimal(18, 0)
  rate          Decimal?      @db.Decimal(18, 0)
  time          Decimal?      @db.Decimal(18, 0)
  Preparation   Preparation[]

  @@unique([id, solvent, concentration, rate, time], map: "UQ_Process")
  @@index([solvent], map: "IDX_SpinCoat_Solvent")
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B616AECE4FE") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}
