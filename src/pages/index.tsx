import { SignIn, SignInButton, useUser } from "@clerk/nextjs";
import Head from "next/head";
import Image from "next/image";


import { RouterOutputs, api } from "~/utils/api";

const UploadMoleculeWizard = () => {
  const { user } = useUser();
  if (!user) {
    return null;
  }

  console.log(user);

  return (
    <div className="flex gap-3 w-full">
      <Image
        src={user.imageUrl}
        alt="Profile image"
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />
      <input placeholder="Material Name" className="grow bg-transparent outline-none" />
    </div>)
}

type MolecleWithAuthor = RouterOutputs["molecule"]["getAll"][number]

const MoleculeCard = (props: MolecleWithAuthor) => {
  const { molecule, author } = props;
  return (
    <div key={molecule.id} className="flex gap-3 p-4 border-b border-slate-400">
      <Image
        src={author.imageUrl}
        className="h-14 w-14 rounded-full"
        alt={`@${author.username}'s profile picture`}
        width={56}
        height={56}
      />
      <div className="flex flex-col">
        <div className="flex text-slate-400 gap-1 text-xs italic">
          <span>{`@${author.username}`}</span>
          <span>{`Â·  ${molecule.createdAt.toDateString()}`}</span>
        </div>
        <span>{molecule.materialName}</span>
      </div>
    </div>
  )
}

export default function Home() {
  const user = useUser();
  const { data, isLoading } = api.molecule.getAll.useQuery();
  if (isLoading) {
    return <div>Loading...</div>;
  }
  if (!data) {
    return <div>No data</div>;
  }

  return (
    <>
      <Head>
        <title>X-ray Atlas</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="https://repo.wsu.edu/favicon/icon.svg" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="w-full h-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex border-b border-slate-400 p-4">
            {!user.isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            {user.isSignedIn && <UploadMoleculeWizard />}
          </div>
          < SignIn path="/sign-in" routing="path" signUpUrl="sign-up" />
          <div className="flex flex-col">
            {[...data, ...data, ...data]?.map((fullMol) => (
              <MoleculeCard {...fullMol} key={fullMol.molecule.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
